# Services assigns a static IP for our containers to expose particular ports to all Pods in the cluster
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: nest
  name: nest
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
    # NOTE: This redis instance is currently not being used
  - name: redis
    port: 6379
    protocol: TCP
    targetPort: 6379
  # Selector determines which Pods should be used by this Service
  selector:
    k8s-app: nest
---
# Deployments (and ReplicaSets and ReplicationControllers) are responsible for keeping
# your Pods running. Pods are containers that share 
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: nest
  name: nest
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: nest
  # This template describes the Pods that will be created/managed by this Deployment
  template:
    metadata:
      labels:
        k8s-app: nest
    spec:
      # Containers within the same Pod can access each others' ports on "localhost"
      containers:

        # nest_flask_i
      - image: bodom0015/nest:flask
        imagePullPolicy: Never
        name: flask
        ports:
        - containerPort: 80
          protocol: TCP
        env:
        - name: PROJECT_ENV
          value: "knoweng"
        - name: NEST_RUNLEVEL
          value: "development"
        - name: POSTGRES_HOST
          value: "localhost"
        - name: REDIS_HOST
          value: "localhost"
        - name: AWS_SHARED_MNT_PATH
          value: "/mnt/knowdev/lambert8"
        volumeMounts:
        - name: userfiles
          mountPath: "/userfiles"
        - name: demofiles
          mountPath: "/demo_files"

        # postgres_i
      - image: postgres:9.6.2
        name: postgres
        env:
        - name: PGDATA
          value: "/data/db/postgres"
        - name: POSTGRES_USER
          value: "nest"
        - name: POSTGRES_PASSWORD
          value: "Toaslej8"
        volumeMounts:
        - name: pgdb
          mountPath: "/data/db"
        ports:
        - containerPort: 5432
          protocol: TCP

        # redis_i
      - image: redis:3.0.3
        name: redis
        ports:
        - containerPort: 6379
          protocol: TCP

        # nest_jobs_i
      - image: bodom0015/nest:jobs
        imagePullPolicy: Never
        name: jobs
        #securityContext:
          #runAsUser: 0   # DOCKER_UID
          #fsGroup: 999   # DOCKER_GID
        env:
        - name: PROJECT_ENV
          value: "knoweng"
        - name: REDIS_HOST
          value: "localhost"
        - name: POSTGRES_HOST
          value: "localhost"
        - name: AWS_SHARED_MNT_PATH
          value: "/mnt/knowdev/lambert8"
        - name: EXEC_MODE
          value: "kubernetes"
        volumeMounts:
        - name: userfiles
          mountPath: "/userfiles"
        - name: networks
          mountPath: "/networks"
        - name: readmes
          mountPath: "/pipeline_readmes"

    # This YAML assumes that the nest source code has been cloned into /home/ubuntu/nest
      volumes:
      - name: pgdb
        hostPath:
          path: "/home/ubuntu/nest/data/db"
      - name: userfiles
        hostPath:
          path: "/home/ubuntu/nest/data/userfiles"
      - name: networks
        hostPath:
          path: "/home/ubuntu/nest/data/projects/knoweng/networks"
      - name: readmes
        hostPath:
          path: "/home/ubuntu/nest/data/projects/knoweng/pipeline_readmes"
      - name: demofiles
        hostPath:
          path: "/home/ubuntu/nest/data/projects/knoweng/demo_files"
